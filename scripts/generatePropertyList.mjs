import fs from "node:fs";
import path from "node:path";
import css from "@webref/css";
import allProperties from "../lib/generated/allProperties.js";
import allExtraProperties from "../lib/utils/allExtraProperties.js";

const unifiedProperties =
  typeof allProperties.union === "function"
    ? allProperties.union(allExtraProperties)
    : new Set([...allProperties, ...allExtraProperties]);

const parsedFiles = await css.listAll();
const definitions = new Map();
for (const { properties } of Object.values(parsedFiles)) {
  if (Array.isArray(properties)) {
    for (const definition of properties) {
      const { href, initial, inherited, computedValue, legacyAliasOf, name, styleDeclaration } =
        definition;
      if (unifiedProperties.has(name)) {
        definitions.set(name, {
          href,
          initial,
          inherited,
          computedValue,
          legacyAliasOf,
          name,
          styleDeclaration
        });
      }
    }
  }
}

const [dateTodayFormatted] = new Date().toISOString().split("T");
const { dirname } = import.meta;

// generate prpoertyList
const propertyList = new Map();
for (const property of [...unifiedProperties].toSorted()) {
  const definition = definitions.get(property);
  if (definition) {
    propertyList.set(property, definition);
  }
}
const output = `"use strict";
// autogenerated - ${dateTodayFormatted}

module.exports = new Map(${JSON.stringify([...propertyList], null, 2)});
`;
const outputFile = path.resolve(dirname, "../lib/generated/propertyList.js");

// generate Web IDL
const idlAttr = "[CEReactions] attribute [LegacyNullToEmptyString] CSSOMString";
const idlAttrs = [`${idlAttr} cssFloat;`];
for (const { styleDeclaration } of propertyList.values()) {
  if (Array.isArray(styleDeclaration)) {
    for (const property of styleDeclaration) {
      idlAttrs.push(`${idlAttr} ${property};`);
    }
  }
}
const webidlOutput = `// autogenerated - ${dateTodayFormatted}
[Exposed=Window]
interface CSSStyleProperties : CSSStyleDeclaration {
  ${idlAttrs.join("\n  ")}
};
`;
const webidlOutputFile = path.resolve(dirname, "../lib/webidl/CSSStyleProperties.webidl");

fs.writeFileSync(outputFile, output);
fs.writeFileSync(webidlOutputFile, webidlOutput);
